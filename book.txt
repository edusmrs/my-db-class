PROJETO DE BANCO DE DADOS
  - Modelagem - Elencar/Identificar/Destacar requisitos (estruturais e funcionais)
    - Modelagem conceitual (diagrama IR)
      - Entedidades -> Tabelas
      - Atributos -> variáveis/colunas
        - Identificadores -> chaves primárias -> primary key
        - Ordinários -> não são identificadores
      - Relacionamento
        - Associação
        - Herança
        - Dependência
      - Cardinalidade -> quantidade de um elemento de uma tabela que se relaciona com elementos de outra tabela
        - FUNDAMENTAL para definir as chaves estrangeiras -> foreign key
        - tipos:
          - 1..1
          - 1..* | 1..n
          - *--* | n..n

MODELAGEM LÓGICA 
  - Transferencia de entidades em tabelas
  - Definição de chaves estrangeiras a partir da cardinalidade
    - 1..1 -> a chave estrangeira pode estar em qualquer uma das entidades.
    - 1..n -> a chave estrangeira vai para o lado que está o n.
    - n..n -> cria-se uma terceira tabela, onde as chaves primárias das duas tabelas irão se unir/juntar na tabela criada.

Projeto de banco de dados 
  - Modelagem
  - Regra de Negócio
- Sistema Gerenciador de Banco de Dados - SGBD: Coleção de serviços (segurança, integridade -> transação: isolamento, consistência, atomicidade, ...)
  - Transações: (ACID: atomicidade, consistência, isolamento e durabilidade) ato de manipular dados: inserir, selecionar, atualizar, deletar. 
  - Linguagem SQL
    - QUEM OPERACIONALIZA AS TRANSAÇÕES É A LINGUAGEM SQL
      - DML (Data Manipulation Language)
        - Criar databases/esquemas, tabelas (restrições), visões
      - DDL (Data Definition Language)
        - Inserir, Atualizar, Selecionar e Deletar


# MYSQL
  - show databases;
  - use nomeDataBaseDesejado;
  - show tables;

  aluno n ------ 1 curso

  aluno(alunoId, nome, curso)
    curso referencia cursoId

  curso(cursoId, nome)

  create table curso(
    cursoId int auto_increment,
    nome varchar(50) not null,

    primary key (cursoId),
    index 'nomeCurso' (nome) asc
  );

  insert into curso (cursoId, nome) values (1, "Ciência da Computação")
  insert into curso (nome) values ("Sistemas de Informação")
  insert into curso (nome) values ("Jogos Digitais")
  insert into curso (nome) values ("Biomedicina")

  create table aluno(
    alunoId int auto_increment,
    nome varchar(50) not null,
    curso int not null,

    primary key(alunoId),
    index 'nomeAluno' (nome) asc,
    foreign key curso references curso(cursoId)
  )

  insert into aluno (alunoId, nome, curso) values (1000, "Bernardo Ries", 1)
  insert into aluno (alunoId, nome, curso) values (1001, "João Giovelli", 1)
  insert into aluno (alunoId, nome, curso) values (1002, "Matheus Rossatto", 2)
  insert into aluno (alunoId, nome, curso) values (1003, "Leo Brum", 2)
  insert into aluno (alunoId, nome, curso) values (1004, "Silvio Andrade", 3)
  insert into aluno (alunoId, nome, curso) values (1005, "Anne Martins", NULL)
  insert into aluno (alunoId, nome, curso) values (1006, "Dante Zamberlan", NULL)
  

SQL em SGBD
    - Algebra Relacional
      - Projeção - Isolar colunas(s) de uma ou mais tabelas
          select nome
          from aluno;

          select nome, curso
          from aluno;

      - Seleção - Projetar com condição
          select nome
          from aluno
          where curso == 1;

          select nome, alunoId
          from aluno
          where curso == NULL;

          select nome, alunoId
          from aluno
          where curso == 1 or curso == 3;

        - Produto cartesiano -> essência da junção (join)
          %listar todos os alunos e os nomes de seus respectivos cursos
          select aluno.nome, curso.nome
          from aluno, curso
          where aluno.curso = curso.cursoId;

          %listar toodos os alunos do curso Ciência da Computação
          select aluno.nome
          from aluno, curso
          where curso.cursoId = aluno.curso and curso.nome = "Ciência da Computação"; 
          
          where curso.nome = "Ciência da Computação" and curso.cursoId = aluno.curso;

          #quantos alunos são do curso Ciência da Computação
          select count(*)
          from aluno, curso
          where curso.nome = "Ciência da Computação" and curso.cursoId = aluno.curso;


          %listar todos os cursos cadastrados e sua relação com institruição (id)
          select curso.nome, curso.Instituicao_idInstituicao
          from curso;

          %listar todos os cursos e os nomes respectivos de suas instituições
          select curso.nome, instituicao.nome
          from curso, instituicao.nome
          where curso.Instituicao_idInstituicao = instituicao.idInstituicao;

          %mostrar todos os usuários de cursos que tenha bio no nome e seus respectivos cursos
          select usuario.nome, curso.nome
          from usuario, curso, usuario_has_curso
          where curso.nome like "Bio" and
                curso.idCurso = usuario_has_curso.curso_idCurso and
                usuario.idUsuario = usuario_has_curso.usuario_idUsuario;




          %listar os avaliadores
          select usuario.*
          from usuario, avaliacao
          where usuario.idUsuario = avaliacao.usuario_idUsuario_avaliadorResponsavel or
                usuario.idUsuario = avaliacao.usuario_idUsuario_avaliadorSuplente;
                

          select usuario.nome
          from usuario, avaliacao
          where (avaliacao.parecerAvaliadorResponsavel = null or avaliacao.parecerAvaliadorSuplente = NULL)
                and
                (usuario.idUsuario = avaliacao.usuario_idUsuario_avaliadorResponsavel or
                usuario.idUsuario = avaliacao.usuario_idUsuario_avaliadorSuplente);



          DIAGRAMA LIVRARIA
          
          %mostrar as transportadoras que entregam produtos para o cliente com cpf
          %88877256087

          select transportadora.nome
          from transportadora, entrega, venda, cliente
          where cliente.cpf = "88877256087" and %filtro básico
                cliente.idCliente = venda.cliente_idCliente and
                transportadora.idTransportadora = entrega.transportadora_idTransportadora and
                venda.numeroNotaFiscal = entrega.Venda_numeroNotaFiscal;